// Generated from /Users/baidu/test/Java_LongFormASR_1.0.0001.0/MIPSSimulator/antlr/MipsAsm.g4 by ANTLR 4.7
package com.chonwhite.mips.assembler.antrl;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class MipsAsmLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.7", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, T__32=33, T__33=34, T__34=35, T__35=36, T__36=37, T__37=38, 
		T__38=39, T__39=40, T__40=41, T__41=42, T__42=43, T__43=44, T__44=45, 
		T__45=46, T__46=47, T__47=48, T__48=49, T__49=50, T__50=51, T__51=52, 
		T__52=53, WS=54, NEWLINE=55, COMMENT=56, NUM=57, HEX_NUM=58, ALPHA=59, 
		NAME=60, QUOTED_STRING=61, IMM_REG=62, S_REG=63, T_REG=64, V_REG=65, A_REG=66, 
		K_REG=67;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
		"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", "T__40", 
		"T__41", "T__42", "T__43", "T__44", "T__45", "T__46", "T__47", "T__48", 
		"T__49", "T__50", "T__51", "T__52", "WS", "NEWLINE", "COMMENT", "NUM", 
		"HEX_NUM", "ALPHA", "NAME", "ESCAPED_QUOTE", "QUOTED_STRING", "IMM_REG", 
		"S_REG", "T_REG", "V_REG", "A_REG", "K_REG"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "'.text'", "'.data'", "':'", "'$zero'", "'$sp'", "'$fp'", "'$ra'", 
		"'-'", "'add'", "','", "'addu'", "'sub'", "'and'", "'or'", "'nor'", "'xor'", 
		"'nand'", "'slt'", "'sll'", "'srl'", "'sra'", "'jr'", "'addi'", "'addiu'", 
		"'lw'", "'('", "')'", "'lh'", "'lhu'", "'lb'", "'lbu'", "'sw'", "'sh'", 
		"'sb'", "'lui'", "'andi'", "'ori'", "'nori'", "'slti'", "'beq'", "'bne'", 
		"'bgtz'", "'j'", "'jal'", "'syscall'", "'ble'", "'blt'", "'bge'", "'bgt'", 
		"'li'", "'la'", "'move'", "'halt'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, "WS", "NEWLINE", "COMMENT", "NUM", 
		"HEX_NUM", "ALPHA", "NAME", "QUOTED_STRING", "IMM_REG", "S_REG", "T_REG", 
		"V_REG", "A_REG", "K_REG"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public MipsAsmLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "MipsAsm.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2E\u01b6\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\3\2\3\2\3\2\3\2\3\2\3"+
		"\2\3\3\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6"+
		"\3\6\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\t\3\t\3\n\3\n\3\n\3\n\3\13\3\13"+
		"\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\17\3\17\3\17"+
		"\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\23"+
		"\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\26\3\26\3\26"+
		"\3\26\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\31"+
		"\3\31\3\32\3\32\3\32\3\33\3\33\3\34\3\34\3\35\3\35\3\35\3\36\3\36\3\36"+
		"\3\36\3\37\3\37\3\37\3 \3 \3 \3 \3!\3!\3!\3\"\3\"\3\"\3#\3#\3#\3$\3$\3"+
		"$\3$\3%\3%\3%\3%\3%\3&\3&\3&\3&\3\'\3\'\3\'\3\'\3\'\3(\3(\3(\3(\3(\3)"+
		"\3)\3)\3)\3*\3*\3*\3*\3+\3+\3+\3+\3+\3,\3,\3-\3-\3-\3-\3.\3.\3.\3.\3."+
		"\3.\3.\3.\3/\3/\3/\3/\3\60\3\60\3\60\3\60\3\61\3\61\3\61\3\61\3\62\3\62"+
		"\3\62\3\62\3\63\3\63\3\63\3\64\3\64\3\64\3\65\3\65\3\65\3\65\3\65\3\66"+
		"\3\66\3\66\3\66\3\66\3\67\6\67\u0160\n\67\r\67\16\67\u0161\3\67\3\67\3"+
		"8\58\u0167\n8\38\38\39\39\79\u016d\n9\f9\169\u0170\139\39\39\39\39\3:"+
		"\6:\u0177\n:\r:\16:\u0178\3;\3;\3;\6;\u017e\n;\r;\16;\u017f\3<\3<\3=\3"+
		"=\7=\u0186\n=\f=\16=\u0189\13=\3>\3>\3>\3?\3?\3?\7?\u0191\n?\f?\16?\u0194"+
		"\13?\3?\3?\3@\3@\6@\u019a\n@\r@\16@\u019b\3A\3A\3A\3A\3A\3B\3B\3B\3B\3"+
		"B\3C\3C\3C\3C\3C\3D\3D\3D\3D\3D\3E\3E\3E\3E\3E\4\u016e\u0192\2F\3\3\5"+
		"\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21"+
		"!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!"+
		"A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k\67m8o9q:s"+
		";u<w=y>{\2}?\177@\u0081A\u0083B\u0085C\u0087D\u0089E\3\2\r\4\2\13\13\""+
		"\"\3\2\62;\4\2ZZzz\5\2\62;CHch\6\2&&C\\aac|\5\2C\\aac|\6\2\62;C\\aac|"+
		"\4\2\f\ftt\3\2\629\3\2\62\63\3\2\62\65\2\u01bd\2\3\3\2\2\2\2\5\3\2\2\2"+
		"\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3"+
		"\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2"+
		"\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2"+
		"\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2"+
		"\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2"+
		"\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2"+
		"\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y"+
		"\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2"+
		"\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2"+
		"\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2}\3\2\2\2\2\177\3\2\2\2"+
		"\2\u0081\3\2\2\2\2\u0083\3\2\2\2\2\u0085\3\2\2\2\2\u0087\3\2\2\2\2\u0089"+
		"\3\2\2\2\3\u008b\3\2\2\2\5\u0091\3\2\2\2\7\u0097\3\2\2\2\t\u0099\3\2\2"+
		"\2\13\u009f\3\2\2\2\r\u00a3\3\2\2\2\17\u00a7\3\2\2\2\21\u00ab\3\2\2\2"+
		"\23\u00ad\3\2\2\2\25\u00b1\3\2\2\2\27\u00b3\3\2\2\2\31\u00b8\3\2\2\2\33"+
		"\u00bc\3\2\2\2\35\u00c0\3\2\2\2\37\u00c3\3\2\2\2!\u00c7\3\2\2\2#\u00cb"+
		"\3\2\2\2%\u00d0\3\2\2\2\'\u00d4\3\2\2\2)\u00d8\3\2\2\2+\u00dc\3\2\2\2"+
		"-\u00e0\3\2\2\2/\u00e3\3\2\2\2\61\u00e8\3\2\2\2\63\u00ee\3\2\2\2\65\u00f1"+
		"\3\2\2\2\67\u00f3\3\2\2\29\u00f5\3\2\2\2;\u00f8\3\2\2\2=\u00fc\3\2\2\2"+
		"?\u00ff\3\2\2\2A\u0103\3\2\2\2C\u0106\3\2\2\2E\u0109\3\2\2\2G\u010c\3"+
		"\2\2\2I\u0110\3\2\2\2K\u0115\3\2\2\2M\u0119\3\2\2\2O\u011e\3\2\2\2Q\u0123"+
		"\3\2\2\2S\u0127\3\2\2\2U\u012b\3\2\2\2W\u0130\3\2\2\2Y\u0132\3\2\2\2["+
		"\u0136\3\2\2\2]\u013e\3\2\2\2_\u0142\3\2\2\2a\u0146\3\2\2\2c\u014a\3\2"+
		"\2\2e\u014e\3\2\2\2g\u0151\3\2\2\2i\u0154\3\2\2\2k\u0159\3\2\2\2m\u015f"+
		"\3\2\2\2o\u0166\3\2\2\2q\u016a\3\2\2\2s\u0176\3\2\2\2u\u017a\3\2\2\2w"+
		"\u0181\3\2\2\2y\u0183\3\2\2\2{\u018a\3\2\2\2}\u018d\3\2\2\2\177\u0197"+
		"\3\2\2\2\u0081\u019d\3\2\2\2\u0083\u01a2\3\2\2\2\u0085\u01a7\3\2\2\2\u0087"+
		"\u01ac\3\2\2\2\u0089\u01b1\3\2\2\2\u008b\u008c\7\60\2\2\u008c\u008d\7"+
		"v\2\2\u008d\u008e\7g\2\2\u008e\u008f\7z\2\2\u008f\u0090\7v\2\2\u0090\4"+
		"\3\2\2\2\u0091\u0092\7\60\2\2\u0092\u0093\7f\2\2\u0093\u0094\7c\2\2\u0094"+
		"\u0095\7v\2\2\u0095\u0096\7c\2\2\u0096\6\3\2\2\2\u0097\u0098\7<\2\2\u0098"+
		"\b\3\2\2\2\u0099\u009a\7&\2\2\u009a\u009b\7|\2\2\u009b\u009c\7g\2\2\u009c"+
		"\u009d\7t\2\2\u009d\u009e\7q\2\2\u009e\n\3\2\2\2\u009f\u00a0\7&\2\2\u00a0"+
		"\u00a1\7u\2\2\u00a1\u00a2\7r\2\2\u00a2\f\3\2\2\2\u00a3\u00a4\7&\2\2\u00a4"+
		"\u00a5\7h\2\2\u00a5\u00a6\7r\2\2\u00a6\16\3\2\2\2\u00a7\u00a8\7&\2\2\u00a8"+
		"\u00a9\7t\2\2\u00a9\u00aa\7c\2\2\u00aa\20\3\2\2\2\u00ab\u00ac\7/\2\2\u00ac"+
		"\22\3\2\2\2\u00ad\u00ae\7c\2\2\u00ae\u00af\7f\2\2\u00af\u00b0\7f\2\2\u00b0"+
		"\24\3\2\2\2\u00b1\u00b2\7.\2\2\u00b2\26\3\2\2\2\u00b3\u00b4\7c\2\2\u00b4"+
		"\u00b5\7f\2\2\u00b5\u00b6\7f\2\2\u00b6\u00b7\7w\2\2\u00b7\30\3\2\2\2\u00b8"+
		"\u00b9\7u\2\2\u00b9\u00ba\7w\2\2\u00ba\u00bb\7d\2\2\u00bb\32\3\2\2\2\u00bc"+
		"\u00bd\7c\2\2\u00bd\u00be\7p\2\2\u00be\u00bf\7f\2\2\u00bf\34\3\2\2\2\u00c0"+
		"\u00c1\7q\2\2\u00c1\u00c2\7t\2\2\u00c2\36\3\2\2\2\u00c3\u00c4\7p\2\2\u00c4"+
		"\u00c5\7q\2\2\u00c5\u00c6\7t\2\2\u00c6 \3\2\2\2\u00c7\u00c8\7z\2\2\u00c8"+
		"\u00c9\7q\2\2\u00c9\u00ca\7t\2\2\u00ca\"\3\2\2\2\u00cb\u00cc\7p\2\2\u00cc"+
		"\u00cd\7c\2\2\u00cd\u00ce\7p\2\2\u00ce\u00cf\7f\2\2\u00cf$\3\2\2\2\u00d0"+
		"\u00d1\7u\2\2\u00d1\u00d2\7n\2\2\u00d2\u00d3\7v\2\2\u00d3&\3\2\2\2\u00d4"+
		"\u00d5\7u\2\2\u00d5\u00d6\7n\2\2\u00d6\u00d7\7n\2\2\u00d7(\3\2\2\2\u00d8"+
		"\u00d9\7u\2\2\u00d9\u00da\7t\2\2\u00da\u00db\7n\2\2\u00db*\3\2\2\2\u00dc"+
		"\u00dd\7u\2\2\u00dd\u00de\7t\2\2\u00de\u00df\7c\2\2\u00df,\3\2\2\2\u00e0"+
		"\u00e1\7l\2\2\u00e1\u00e2\7t\2\2\u00e2.\3\2\2\2\u00e3\u00e4\7c\2\2\u00e4"+
		"\u00e5\7f\2\2\u00e5\u00e6\7f\2\2\u00e6\u00e7\7k\2\2\u00e7\60\3\2\2\2\u00e8"+
		"\u00e9\7c\2\2\u00e9\u00ea\7f\2\2\u00ea\u00eb\7f\2\2\u00eb\u00ec\7k\2\2"+
		"\u00ec\u00ed\7w\2\2\u00ed\62\3\2\2\2\u00ee\u00ef\7n\2\2\u00ef\u00f0\7"+
		"y\2\2\u00f0\64\3\2\2\2\u00f1\u00f2\7*\2\2\u00f2\66\3\2\2\2\u00f3\u00f4"+
		"\7+\2\2\u00f48\3\2\2\2\u00f5\u00f6\7n\2\2\u00f6\u00f7\7j\2\2\u00f7:\3"+
		"\2\2\2\u00f8\u00f9\7n\2\2\u00f9\u00fa\7j\2\2\u00fa\u00fb\7w\2\2\u00fb"+
		"<\3\2\2\2\u00fc\u00fd\7n\2\2\u00fd\u00fe\7d\2\2\u00fe>\3\2\2\2\u00ff\u0100"+
		"\7n\2\2\u0100\u0101\7d\2\2\u0101\u0102\7w\2\2\u0102@\3\2\2\2\u0103\u0104"+
		"\7u\2\2\u0104\u0105\7y\2\2\u0105B\3\2\2\2\u0106\u0107\7u\2\2\u0107\u0108"+
		"\7j\2\2\u0108D\3\2\2\2\u0109\u010a\7u\2\2\u010a\u010b\7d\2\2\u010bF\3"+
		"\2\2\2\u010c\u010d\7n\2\2\u010d\u010e\7w\2\2\u010e\u010f\7k\2\2\u010f"+
		"H\3\2\2\2\u0110\u0111\7c\2\2\u0111\u0112\7p\2\2\u0112\u0113\7f\2\2\u0113"+
		"\u0114\7k\2\2\u0114J\3\2\2\2\u0115\u0116\7q\2\2\u0116\u0117\7t\2\2\u0117"+
		"\u0118\7k\2\2\u0118L\3\2\2\2\u0119\u011a\7p\2\2\u011a\u011b\7q\2\2\u011b"+
		"\u011c\7t\2\2\u011c\u011d\7k\2\2\u011dN\3\2\2\2\u011e\u011f\7u\2\2\u011f"+
		"\u0120\7n\2\2\u0120\u0121\7v\2\2\u0121\u0122\7k\2\2\u0122P\3\2\2\2\u0123"+
		"\u0124\7d\2\2\u0124\u0125\7g\2\2\u0125\u0126\7s\2\2\u0126R\3\2\2\2\u0127"+
		"\u0128\7d\2\2\u0128\u0129\7p\2\2\u0129\u012a\7g\2\2\u012aT\3\2\2\2\u012b"+
		"\u012c\7d\2\2\u012c\u012d\7i\2\2\u012d\u012e\7v\2\2\u012e\u012f\7|\2\2"+
		"\u012fV\3\2\2\2\u0130\u0131\7l\2\2\u0131X\3\2\2\2\u0132\u0133\7l\2\2\u0133"+
		"\u0134\7c\2\2\u0134\u0135\7n\2\2\u0135Z\3\2\2\2\u0136\u0137\7u\2\2\u0137"+
		"\u0138\7{\2\2\u0138\u0139\7u\2\2\u0139\u013a\7e\2\2\u013a\u013b\7c\2\2"+
		"\u013b\u013c\7n\2\2\u013c\u013d\7n\2\2\u013d\\\3\2\2\2\u013e\u013f\7d"+
		"\2\2\u013f\u0140\7n\2\2\u0140\u0141\7g\2\2\u0141^\3\2\2\2\u0142\u0143"+
		"\7d\2\2\u0143\u0144\7n\2\2\u0144\u0145\7v\2\2\u0145`\3\2\2\2\u0146\u0147"+
		"\7d\2\2\u0147\u0148\7i\2\2\u0148\u0149\7g\2\2\u0149b\3\2\2\2\u014a\u014b"+
		"\7d\2\2\u014b\u014c\7i\2\2\u014c\u014d\7v\2\2\u014dd\3\2\2\2\u014e\u014f"+
		"\7n\2\2\u014f\u0150\7k\2\2\u0150f\3\2\2\2\u0151\u0152\7n\2\2\u0152\u0153"+
		"\7c\2\2\u0153h\3\2\2\2\u0154\u0155\7o\2\2\u0155\u0156\7q\2\2\u0156\u0157"+
		"\7x\2\2\u0157\u0158\7g\2\2\u0158j\3\2\2\2\u0159\u015a\7j\2\2\u015a\u015b"+
		"\7c\2\2\u015b\u015c\7n\2\2\u015c\u015d\7v\2\2\u015dl\3\2\2\2\u015e\u0160"+
		"\t\2\2\2\u015f\u015e\3\2\2\2\u0160\u0161\3\2\2\2\u0161\u015f\3\2\2\2\u0161"+
		"\u0162\3\2\2\2\u0162\u0163\3\2\2\2\u0163\u0164\b\67\2\2\u0164n\3\2\2\2"+
		"\u0165\u0167\7\17\2\2\u0166\u0165\3\2\2\2\u0166\u0167\3\2\2\2\u0167\u0168"+
		"\3\2\2\2\u0168\u0169\7\f\2\2\u0169p\3\2\2\2\u016a\u016e\7%\2\2\u016b\u016d"+
		"\13\2\2\2\u016c\u016b\3\2\2\2\u016d\u0170\3\2\2\2\u016e\u016f\3\2\2\2"+
		"\u016e\u016c\3\2\2\2\u016f\u0171\3\2\2\2\u0170\u016e\3\2\2\2\u0171\u0172"+
		"\5o8\2\u0172\u0173\3\2\2\2\u0173\u0174\b9\2\2\u0174r\3\2\2\2\u0175\u0177"+
		"\t\3\2\2\u0176\u0175\3\2\2\2\u0177\u0178\3\2\2\2\u0178\u0176\3\2\2\2\u0178"+
		"\u0179\3\2\2\2\u0179t\3\2\2\2\u017a\u017b\7\62\2\2\u017b\u017d\t\4\2\2"+
		"\u017c\u017e\t\5\2\2\u017d\u017c\3\2\2\2\u017e\u017f\3\2\2\2\u017f\u017d"+
		"\3\2\2\2\u017f\u0180\3\2\2\2\u0180v\3\2\2\2\u0181\u0182\t\6\2\2\u0182"+
		"x\3\2\2\2\u0183\u0187\t\7\2\2\u0184\u0186\t\b\2\2\u0185\u0184\3\2\2\2"+
		"\u0186\u0189\3\2\2\2\u0187\u0185\3\2\2\2\u0187\u0188\3\2\2\2\u0188z\3"+
		"\2\2\2\u0189\u0187\3\2\2\2\u018a\u018b\7^\2\2\u018b\u018c\7$\2\2\u018c"+
		"|\3\2\2\2\u018d\u0192\7$\2\2\u018e\u0191\5{>\2\u018f\u0191\n\t\2\2\u0190"+
		"\u018e\3\2\2\2\u0190\u018f\3\2\2\2\u0191\u0194\3\2\2\2\u0192\u0193\3\2"+
		"\2\2\u0192\u0190\3\2\2\2\u0193\u0195\3\2\2\2\u0194\u0192\3\2\2\2\u0195"+
		"\u0196\7$\2\2\u0196~\3\2\2\2\u0197\u0199\7&\2\2\u0198\u019a\t\3\2\2\u0199"+
		"\u0198\3\2\2\2\u019a\u019b\3\2\2\2\u019b\u0199\3\2\2\2\u019b\u019c\3\2"+
		"\2\2\u019c\u0080\3\2\2\2\u019d\u019e\7&\2\2\u019e\u019f\7u\2\2\u019f\u01a0"+
		"\3\2\2\2\u01a0\u01a1\t\n\2\2\u01a1\u0082\3\2\2\2\u01a2\u01a3\7&\2\2\u01a3"+
		"\u01a4\7v\2\2\u01a4\u01a5\3\2\2\2\u01a5\u01a6\t\3\2\2\u01a6\u0084\3\2"+
		"\2\2\u01a7\u01a8\7&\2\2\u01a8\u01a9\7x\2\2\u01a9\u01aa\3\2\2\2\u01aa\u01ab"+
		"\t\13\2\2\u01ab\u0086\3\2\2\2\u01ac\u01ad\7&\2\2\u01ad\u01ae\7c\2\2\u01ae"+
		"\u01af\3\2\2\2\u01af\u01b0\t\f\2\2\u01b0\u0088\3\2\2\2\u01b1\u01b2\7&"+
		"\2\2\u01b2\u01b3\7m\2\2\u01b3\u01b4\3\2\2\2\u01b4\u01b5\t\13\2\2\u01b5"+
		"\u008a\3\2\2\2\f\2\u0161\u0166\u016e\u0178\u017f\u0187\u0190\u0192\u019b"+
		"\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}